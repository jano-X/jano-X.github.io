## 现状
- 虚拟机 900+
- 环境 5套

#### 每套新增及扩展应用
- 新应用分配主机网络资源(ip,mac,主机资源等)
- 系统安装、环境初始化、日志收集、监控等一键标准化部署
- 更新发布服配置
- 更新跳板机


#### 新增一套环境
- 分配新环境主机网络资源(网段,ip,mac,主机资源)

- 新应用分配主机网络资源(ip,mac,主机资源等)

- 系统安装、环境初始化、日志收集、监控等一键标准化部署

- 创建发布服配置

- 中间件集群的部署(zk,redis,mq,fastdfs等总计9套)及配置

- Apollo配置中心的部署及配置

- ELK,Oracle等部署及配置

- 创建跳板机

## 容器技术
#### 什么是容器
**容器就是将软件打包成标准化单元，以用于开发、交付和部署**

可以将容器看成集装箱,相同的集装箱可以直接从船上转移到火车或卡车上，而无需卸货。集装箱中的物品无关紧要。

#### 为什么需要容器部署技术

部署架构的演变：

![部署架构的演变](https://d33wubrfki0l68.cloudfront.net/26a177ede4d7b032362289c6fccd448fc4a91174/eb693/images/docs/container_evolution.svg)

**传统部署时代:**   早期，组织在物理服务器上运行应用程序。无法为物理服务器中的应用程序定义资源边界，这会导致资源分配问题。例如，如果在物理服务器上运行多个应用程序，则可能会出现一个应用程序占用大部分资源的情况，结果，其他应用程序的性能将下降。解决方案是在不同的物理服务器上运行每个应用程序。但这并没有随着资源利用不足而扩展，并且组织维护许多物理服务器的成本很高。

**虚拟化部署时代：** 作为解决方案，引入了虚拟化。它允许您在单个物理服务器的CPU上运行多个虚拟机（VM）。虚拟化允许应用程序在VM之间隔离，并提供安全级别，因为一个应用程序的信息不能被另一应用程序自由访问。

虚拟化可以更好地利用物理服务器中的资源，并可以实现更好的可伸缩性，因为可以轻松地添加或更新应用程序，降低硬件成本等等。借助虚拟化，您可以将一组物理资源呈现为一组一次性虚拟机。

每个VM是一台完整的计算机，在虚拟化硬件之上运行所有组件，包括其自己的操作系统。

**容器部署时代：** 容器类似于VM，但是它们具有轻松的隔离属性，可以在应用程序之间共享操作系统（OS）。因此，容器被认为是轻质的。与VM相似，容器具有自己的文件系统，CPU，内存，进程空间等。由于它们与基础架构分离，因此可以跨云和OS分发进行移植。

#### 容器的优点
容器之所以受欢迎，是因为它们提供了以下的优势：

- 敏捷的应用程序创建和部署：与使用VM映像相比，容器映像创建的简便性和效率更高。
- 持续的开发，集成和部署：通过快速简单的回滚（由于镜像不可更改），提供可靠且频繁的容器映像构建和部署。
- 开发和运营的关注点分离：在构建/发布时而不是在部署时创建应用程序容器映像，从而将应用程序与基础架构分离。
- 可观察性：不仅可以显示操作系统级别的信息和指标，还可以显示应用程序的运行状况和其他信号。
- 跨开发，测试和生产的环境一致性：在便携式计算机上与在云中相同地运行。
- 云和操作系统分发的可移植性：可在Ubuntu，RHEL，CoreOS，本地，云服务商和其他任何地方运行。
- 以应用程序为中心的管理：提高抽象级别，从在虚拟硬件上运行OS到使用逻辑资源在OS上运行应用程序。
- 松散耦合，分布式，弹性，解放的微服务：应用程序被分解成较小的独立部分，并且可以动态部署和管理–而不是在一台大型单机上运行的整体堆栈。
- 资源隔离：可预测的应用程序性能。
- 资源利用：高效率和高密度。

#### 什么是kubernetes
Kubernetes是一个可移植的，可扩展的开源平台，用于管理容器化的工作负载和服务，可促进声明式配置和自动化。它拥有一个庞大且快速增长的生态系统。Kubernetes的服务，支持和工具广泛可用。

Kubernetes这个名字起源于希腊语，意思是舵手或飞行员。Google在2014年开源了Kubernetes项目。Kubernetes建立在Google大规模运行生产工作负载的十年半的经验的基础上，并结合了社区中最好的想法和实践。

#### kubernetes的架构
![kubernetes架构](https://d33wubrfki0l68.cloudfront.net/817bfdd83a524fed7342e77a26df18c87266b8f4/3da7c/images/docs/components-of-kubernetes.png)

master组件：
- kube-apiserver
- kube-controller-manager
- kube-scheduler
- etcd

Node 组件:
- kubelet
- kube-proxy
- Container Runtime

Addon 插件
- DNS
- CNI

#### kubernetes的优点
- **服务发现和负载平衡**

Kubernetes可以使用DNS名称或使用其自己的IP地址公开容器。如果到容器的流量很高，Kubernetes可以负载平衡并分配网络流量，从而使部署稳定。

- **存储编排**

Kubernetes允许您自动挂载您选择的存储系统，例如本地存储，公共云提供商等。

- **自动部署和回滚**

您可以使用Kubernetes描述已部署容器的所需状态，并且可以以受控的速率将实际状态更改为所需状态。例如，您可以自动化Kubernetes来为您的部署创建新容器，删除现有容器并将它们的所有资源用于新容器。

- **自动调度**

您为Kubernetes提供了一个节点集群，可用于运行容器化任务。您告诉Kubernetes每个容器需要多少CPU和内存（RAM）。Kubernetes可以将容器安装到您的节点上，以充分利用您的资源。

- **密码密钥和配置管理**

Kubernetes允许您存储和管理敏感信息，例如密码，OAuth令牌和ssh密钥。您可以部署和更新密钥和应用程序配置，而无需重建容器映像，也无需在堆栈配置中公开密钥。


## 混沌的kubernetes容器编排建设思路

[kubernetes生态思维导图](http://note.youdao.com/noteshare?id=cf33b351dd9f5f8c6f86c2649098fa73&sub=DE4E4C9B38544718B322488601640FAC)
